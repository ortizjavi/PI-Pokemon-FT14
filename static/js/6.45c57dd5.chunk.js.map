{"version":3,"sources":["components/PokeFactory/PokeFactory.module.css","components/PokeFactory/PokeFactory.jsx"],"names":["module","exports","ALL_TYPES","_initialValue","name","attack","speed","defense","hp","weight","height","img","types","StatInput","placeHolder","useState","value","setValue","className","s","inputStat","statName","type","min","max","onChange","e","target","valueContainer","valueStat","Factory","dispatch","useDispatch","useSelector","state","created","createdPokemon","formRef","useRef","values","setValues","submitted","setSubmitted","useEffect","postPokemon","console","log","data","alert","id","current","reset","resetCreated","container","form","onSubmit","preventDefault","stats","document","querySelectorAll","statsValues","Array","from","reduce","el","ref","column","inputText","placeholder","required","includes","concat","selectTypes","map","idx","selectedTypes","length","onClick","category","filter","val","selectedType","style","color","border","relative","inputNumber","inputImage","submitBtn"],"mappings":"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","file":"static/js/6.45c57dd5.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"PokeFactory_container__2Ws1z\",\"form\":\"PokeFactory_form__2258Z\",\"column\":\"PokeFactory_column__3DxUO\",\"inputText\":\"PokeFactory_inputText__2K3yZ\",\"selectTypes\":\"PokeFactory_selectTypes__diuub\",\"selectedTypes\":\"PokeFactory_selectedTypes__bNUFa\",\"selectedType\":\"PokeFactory_selectedType__ZfEcU\",\"types\":\"PokeFactory_types__2Hevc\",\"inputNumber\":\"PokeFactory_inputNumber__d0w-p\",\"relative\":\"PokeFactory_relative__2UpBE\",\"inputStat\":\"PokeFactory_inputStat__3KZ0O\",\"statName\":\"PokeFactory_statName__2YcVN\",\"valueContainer\":\"PokeFactory_valueContainer__2r8Ro\",\"valueStat\":\"PokeFactory_valueStat__3twd7\",\"inputImage\":\"PokeFactory_inputImage__2Q23c\",\"submitBtn\":\"PokeFactory_submitBtn__1nBK0\"};","import { postPokemon, resetCreated } from '../../redux/actions/'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { useState, useRef, useEffect } from 'react'\nimport s from './PokeFactory.module.css'\nimport { GiWeight } from 'react-icons/gi';\nimport { FaRulerVertical } from 'react-icons/fa';\n\n\nconst ALL_TYPES = 'ALL';\nconst DEFAULT_IMAGE = 'https://images-wixmp-ed30a86b8c4ca887773594c2.wixmp.com/f/f82cc357-e354-4ef7-8b2d-647f6f756800/dbf1jrd-095f7fd1-e33b-4e26-b456-8cbf40d0e5d1.png/v1/fill/w_1024,h_765,q_80,strp/quien_es_ese_pokemon__who_s_that_poke___by_shikomt_by_shikomt_dbf1jrd-fullview.jpg?token=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJ1cm46YXBwOjdlMGQxODg5ODIyNjQzNzNhNWYwZDQxNWVhMGQyNmUwIiwiaXNzIjoidXJuOmFwcDo3ZTBkMTg4OTgyMjY0MzczYTVmMGQ0MTVlYTBkMjZlMCIsIm9iaiI6W1t7ImhlaWdodCI6Ijw9NzY1IiwicGF0aCI6IlwvZlwvZjgyY2MzNTctZTM1NC00ZWY3LThiMmQtNjQ3ZjZmNzU2ODAwXC9kYmYxanJkLTA5NWY3ZmQxLWUzM2ItNGUyNi1iNDU2LThjYmY0MGQwZTVkMS5wbmciLCJ3aWR0aCI6Ijw9MTAyNCJ9XV0sImF1ZCI6WyJ1cm46c2VydmljZTppbWFnZS5vcGVyYXRpb25zIl19.YZOIomNz5t-pjv59EuK-mtru0QgjhlTtGEGPLuzR1hM';\n\nconst _initialValue = {\n    name:'',\n    attack:0,\n    speed:0,\n    defense:0,\n    hp:0,\n    weight:0,\n    height:0,\n    img:'',\n    types:[]\n}\n\nconst Factory = () => {\n    const dispatch = useDispatch()\n    const types = useSelector(state => state.types)\n    const created = useSelector(state => state.createdPokemon)\n    const formRef = useRef();\n    const [values,setValues] = useState(_initialValue)\n    const [submitted, setSubmitted] = useState(false);\n    \n    const onChange = (e) => {\n        setValues(values => (\n         \t{...values, [e.target.name] : e.target.value}\n        ))\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault()\n        const stats = document.querySelectorAll(\"input[type='range']\");\n        const statsValues = Array.from(stats)\n            .reduce((stats, el) => {\n                stats[el.name] = el.value;\n                return stats;\n            }, {})\n\n        setValues(values => (\n            {...values, ...statsValues, img: values.img ? values.img : DEFAULT_IMAGE}\n        ))\n\n        setSubmitted(true);\n   }\n\n    const onChangeType = (e) => {\n        const { target: { value } } = e;\n        if (value !== ALL_TYPES && !values.types.includes(value))\n         setValues(values =>(\n          \t{...values, types : values.types.concat([value])}\n          )) \n    }\n\n    const handleRemove = (category) => {\n        setValues(values =>(\n              {...values, types : values.types.filter(val => val !== category)}\n         ));\n    }\n\n    useEffect(() => {\n        if(submitted)\n            dispatch(postPokemon(values));\n        setSubmitted(false);\n    // eslint-disable-next-line\n    }, [submitted])\n\n    useEffect(() => {\n        if (created) {\n            console.log(created);\n            if (created.data) {\n                alert(created.data);\n            } else {\n                alert(`Tu pokemon fue creado correactamente con el id ${created.id}`)\n                formRef.current.reset();\n                setValues(_initialValue);\n            }\n            dispatch(resetCreated());\n        }\n    // eslint-disable-next-line\n    }, [created])\n\n\n    return (\n    \t<div className={s.container}>\n    \t<form id=\"form\" className={s.form} onSubmit={handleSubmit} ref={formRef}> \n         <div className={s.column}>\n             <input \n                 className={s.inputText}\n                 type='text' \n                 placeholder='Nombre' \n                 name='name' \n                 onChange={onChange} \n                 required\n              />\n\n             <div className={s.types}>\n             <select \n                 onChange={onChangeType} \n                 value={ALL_TYPES} \n                 data-filter=\"type\" \n                 className={s.selectTypes}\n              >\n              <option value={ALL_TYPES} key=\"0\"> Tipo </option>\n              { types.map((type, idx) => (\n                <option value={type.name} key={idx}> {type.name} </option>\n               ))}\n             </select>\n             <div className={s.selectedTypes}>\n                 { values.types.length ? values.types.map((type, idx) => (\n                <span \n                    key={idx} value={type} \n                    onClick={() => handleRemove(type)}\n                    className={s.selectedType}\n                    style={{ color: `var(--${type})`, border: `1px solid var(--${type})`}}\n                >\n                 {type} \n                </span>\n                )) : null}\n             </div>\n              </div>\n\n             <div className={s.relative}>\n                 <GiWeight/>\n                 <input \n                    className={s.inputNumber}\n                    type='number' min=\"1\" max=\"200\" \n                    name='attack'placeholder='Fuerza'\n                    onChange={onChange}\n                 />\n             </div>\n\n             <div className={s.relative}>\n                 <FaRulerVertical/>\n                 <input \n                     className={s.inputNumber}\n                     name='height' placeholder='Altura'\n                     type='number' min=\"1\" max=\"200\" \n                     onChange={onChange}\n                 />\n             </div>\n             <StatInput name='hp' placeHolder='Vida'/>\n             <StatInput name='speed' placeHolder='Velocidad'/>\n             <StatInput name='attack' placeHolder='Ataque'/>\n             <StatInput name='defense' placeHolder='Defensa'/>\n         </div>\n         <div className={s.column}>\n             <input\n                 className={s.inputImage} \n                 type='text' \n                 placeholder='Imagen' \n                 name='img' \n                 onChange={onChange}\n             />\n             <input \n                 className={s.submitBtn}\n                 type=\"submit\" \n                 value=\"Crear\"\n             />\n         </div>\n        </form>\n        </div>\n     )\n\n\n}\nexport default Factory;\n\n\nfunction StatInput({name, placeHolder}) {\n    const [value, setValue] = useState(0);\n    const handleChange = (e) => {\n        setValue(e.target.value);\n    }\n\n    return (\n        <div className={s.inputStat}>\n            <span className={s.statName}> {placeHolder} </span>\n            <input\n                 type='range' \n                 name={name} min=\"1\" max=\"200\"\n                 onChange={handleChange}\n            />\n            <div className={s.valueContainer}>\n              <span className={s.valueStat}> {value} </span>\n            </div>\n         </div>\n    );\n}"],"sourceRoot":""}